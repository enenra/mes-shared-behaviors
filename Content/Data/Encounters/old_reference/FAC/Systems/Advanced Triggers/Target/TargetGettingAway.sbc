<?xml version="1.0"?>
<Definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <EntityComponents>
<!--================= 

This file handles the AdvancedTriggers:


-TargetChasing
-TargetGettingAway Done


-TargetAcquiredFirstTime Done
-TargetAcquiredFirstTimeHeadingToTarget Done


Mutually Exclusive:
-TargetAcquiredFirstTimeHeadingToTarget-TargetEasy
-TargetAcquiredFirstTimeHeadingToTarget-TargetHard
-TargetAcquiredFirstTimeHeadingToTarget-TargetPlayerBaseFound
-TargetAcquiredFirstTimeHeadingToTarget-TargetPlayerBunkerFound



[Triggers:FAC-Context_Target-AdvancedTrigger-TargetGettingAway]



[Triggers:FAC-Context_Target-Trigger-TargetHasBeenClose]
[Triggers:FAC-Context_Target-Trigger-LostTarget]
[Triggers:FAC-Context_Target-Trigger-SwitchTarget]


[Triggers:FAC-Context_Target-Trigger-AcquiredTarget]

 ==================-->

	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target_Target-AdvancedTrigger-TargetAcquiredFirstTime</SubtypeId>
      </Id>
      <Description>

	[RivalAI Trigger]
	[Type:AcquiredTarget]
	[UseTrigger:true]
	[StartsReady:false]
	[MaxActions:1]

	[Actions:FAC-Context_Target_Target-Action-TargetAcquiredFirstTime]

      </Description>
    </EntityComponent>


	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Action-TargetAcquiredFirstTime</SubtypeId>
      </Id>
      <Description>

	[RivalAI Action]


	[DebugMessage:ShipEvent TargetAcquiredFirstTime] 


	[ResetCooldownTimeOfTriggers:true]
	[ResetTriggerCooldownNames:FAC-Context_Target-AdvancedTrigger-TargetAcquiredFirstTimeHeadingToTarget]



		</Description>
    </EntityComponent>


	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-AdvancedTrigger-TargetAcquiredFirstTimeHeadingToTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Trigger]
	[Type:Timer]
	[UseTrigger:false]

	[MinCooldownMs:4000]
	[MaxCooldownMs:4001]	
	[MaxActions:1]

	[Actions:FAC-Context_Target-Action-TargetAcquiredFirstTimeHeadingToTarget]

      </Description>
    </EntityComponent>


	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Action-TargetAcquiredFirstTimeHeadingToTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Action]


	[DebugMessage:ShipEvent TargetAcquiredFirstTimeHeadingToTarget] 

		</Description>
    </EntityComponent>



<!-- Target Easy -->

	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-AdvancedTrigger-TargetAcquiredFirstTimeHeadingToTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Trigger]
	[Type:Timer]
	[UseTrigger:false]

	[Conditions:FAC-Context_Target-Condition-TargetGettingAway]
	
	[MinCooldownMs:4000]
	[MaxCooldownMs:4001]	
	[MaxActions:1]

	[Actions:FAC-Context_Target-Action-TargetAcquiredFirstTimeHeadingToTarget]

      </Description>
    </EntityComponent>

     <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Condition-TargetGettingAway</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	
	[TrueBooleans:TargetHasBeenClose]


	[CheckIfTargetIsChasing:true]
	[MinTargetChaseAngle:110]
	[MaxTargetChaseAngle:180]


	[CheckTargetSpeed:true]
	[MinTargetSpeed:35]

      </Description>
    </EntityComponent>	
	

	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Action-TargetAcquiredFirstTimeHeadingToTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Action]


	[DebugMessage:ShipEvent TargetAcquiredFirstTimeHeadingToTarget] 

		</Description>
    </EntityComponent>
	
	













  
	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-AdvancedTrigger-TargetGettingAway</SubtypeId>
      </Id>
      <Description>

	[RivalAI Trigger]
	[Type:TargetFar]
	[Distance:2000]
	[UseTrigger:true]
	[StartsReady:false]
	[MinCooldownMs:5000]
	[MaxCooldownMs:5001]
	[MaxActions:-1]
	[Conditions:FAC-Context_Target-Condition-TargetGettingAway]


	[Actions:FAC-Context_Target-Action-AdvancedTrigger-TargetGettingAway]

      </Description>
    </EntityComponent>
	
	
     <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Condition-TargetGettingAway</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	
	[TrueBooleans:TargetHasBeenClose]


	[CheckIfTargetIsChasing:true]
	[MinTargetChaseAngle:110]
	[MaxTargetChaseAngle:180]


	[CheckTargetSpeed:true]
	[MinTargetSpeed:35]

      </Description>
    </EntityComponent>	
 



	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Action-AdvancedTrigger-TargetGettingAway</SubtypeId>
      </Id>
      <Description>

	[RivalAI Action]

	[SetBooleansFalse:TargetHasBeenClose]


	[DebugMessage:ShipEvent TargetGettingAway] 
	
	
	[ManuallyActivateTrigger:true]
	[ManuallyActivatedTriggerTags:AdvancedTrigger-TargetGettingAway]
	[ForceManualTriggerActivation:false]	

		</Description>
      
    </EntityComponent>	 
 	<!-- Activate all triggers with the tag TargetGettingAway-->
 

 
	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Trigger-TargetHasBeenClose</SubtypeId>
      </Id>
      <Description>

	[RivalAI Trigger]
	[Type:TargetNear]
	[Distance:800]
	[UseTrigger:true]
	[StartsReady:false]
	[MinCooldownMs:5000]
	[MaxCooldownMs:5001]
	[MaxActions:-1]

	[Actions:FAC-Context_Target-Action-TargetHasBeenClose]

      </Description>
    </EntityComponent>


	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Action-TargetHasBeenClose</SubtypeId>
      </Id>
      <Description>

	[RivalAI Action]

	[SetBooleansTrue:TargetHasBeenClose]
		</Description>
      
    </EntityComponent>	




	<!-- No FirstTarget-->
	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Trigger-LostTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Trigger]
	[Type:LostTarget]
	[UseTrigger:true]
	[StartsReady:false]
	[MaxActions:-1]

	[Actions:FAC-Context_Target-Action-LostTarget]

      </Description>
    </EntityComponent>


	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Action-LostTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Action]

	[SetBooleansFalse:TargetHasBeenClose]

		</Description>
    </EntityComponent>	


	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Trigger-SwitchTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Trigger]
	[Type:SwitchTarget]
	[UseTrigger:true]
	[StartsReady:false]
	[MaxActions:-1]

	[Actions:FAC-Context_Target-Action-SwitchTarget]

      </Description>
    </EntityComponent>


	<EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Target-Action-SwitchTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Action]

	[SetBooleansFalse:TargetHasBeenClose]
		</Description>
    </EntityComponent>	
	
	


	
	
  </EntityComponents>
</Definitions>