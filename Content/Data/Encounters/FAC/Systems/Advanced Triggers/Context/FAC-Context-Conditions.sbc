<?xml version="1.0"?>
<Definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <EntityComponents>


<!-- 
There are 3 Settings (bools): SettingNormal, SettingHighAlert, SettingBattle
There are 2 options for target (bools): NoTarget, HasTarget


FAC-Context-Condition-NormalNeutralPlayerNearNoTarget
FAC-Context-Condition-CompareCommandGridValue



Player
FAC-Context-Condition-PlayerHostile
FAC-Context-Condition-PlayerNeutral
FAC-Context-Condition-PlayerFriendly



FAC-Context-Condition-NormalHostile
FAC-Context-Condition-NormalNeutral
FAC-Context-Condition-NormalFriendly

FAC-Context-Condition-BattleHostile
FAC-Context-Condition-BattleNeutral
FAC-Context-Condition-BattleFriendly

FAC-Context-Condition-AttackedbyNPC
FAC-Context-Condition-AttackedbyPlayer


FAC-Context-Condition-Hostile-PlayerDamage
FAC-Context-Condition-Neutral-PlayerDamage
FAC-Context-Condition-Friendly-PlayerDamage



FAC-Context-Condition-AttackedbyPlayer
FAC-Context-Condition-DamagerIsNPC
FAC-Context-Condition-PlayerHelpedNPC


Target:
FAC-Context-Condition-HasTarget
FAC-Context-Condition-NoTarget

FAC-Context-Condition-TargetLight
FAC-Context-Condition-TargetMedium
FAC-Context-Condition-TargetMediumOrGreater
FAC-Context-Condition-TargetHard
FAC-Context-Condition-TargetVeryHard





NormalNeutral
Plaernear
HasNoTarget


-->

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-NormalNeutralPlayerNearNoTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[TrueBooleans:SettingNormal]
	[TrueBooleans:PlayerNear]
	[NoTarget:true]	
	
[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]
[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-500]
[MaxPlayerReputation:500]	
      </Description>
      
    </EntityComponent>	









<!-- Check command value -->

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>FAC-Context-Condition-CompareCommandGridValue</SubtypeId>
      </Id>
      <Description>

        [RivalAI Condition]
		[UseConditions:true]



        [CompareCommandGridValue:true]
        [CompareCommandGridValueMode:Less]
        
      </Description>

    </EntityComponent>







<!-- Settings -->

	
	
	
	
	
	
	
<!-- Player -->
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-PlayerHostile</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]

[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-1500]
[MaxPlayerReputation:-499]

      </Description>
      
    </EntityComponent>
	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-PlayerNeutral</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-500]
[MaxPlayerReputation:500]

      </Description>
      
    </EntityComponent>


    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-PlayerFriendly</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:501]
[MaxPlayerReputation:1500]

      </Description>
      
    </EntityComponent>


















    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-NormalHostile</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[TrueBooleans:SettingNormal]



[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-1500]
[MaxPlayerReputation:-499]

      </Description>
      
    </EntityComponent>
	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-NormalNeutral</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[TrueBooleans:SettingNormal]

[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]
[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-500]
[MaxPlayerReputation:500]

      </Description>
      
    </EntityComponent>


    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-NormalFriendly</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[TrueBooleans:SettingNormal]



[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:501]
[MaxPlayerReputation:1500]

      </Description>
      
    </EntityComponent>







<!-- Battle -->

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-BattleHostile</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[TrueBooleans:SettingBattle]
[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-1500]
[MaxPlayerReputation:-499]

      </Description>
      
    </EntityComponent>
	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-BattleNeutral</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[TrueBooleans:SettingBattle]
[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]
[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-500]
[MaxPlayerReputation:500]

      </Description>
      
    </EntityComponent>


    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-BattleFriendly</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[TrueBooleans:SettingBattle]
[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:501]
[MaxPlayerReputation:1500]

      </Description>
      
    </EntityComponent>	
	
	
	
	
	
	
	
	<!-- ============== DAMAGE ============= -->


    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Damage-Condition-Hostile-Damage</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	

	[IsAttackerHostile:true]

      </Description>
      
    </EntityComponent>

	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Damage-Condition-Hostile-PlayerDamage</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	

	[IsAttackerHostile:true]
	[CheckIfDamagerIsPlayer:true]

      </Description>
      
    </EntityComponent>
	
	
	
	
	
	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Damage-Condition-Neutral-PlayerDamage</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	

	[IsAttackerNeutral:true]
	[CheckIfDamagerIsPlayer:true]
      </Description>
      
    </EntityComponent>


    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context_Damage-Condition-Friendly-PlayerDamage</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]

	[IsAttackerFriendly:true] 
	[CheckIfDamagerIsPlayer:true]
      </Description>
      
    </EntityComponent>



<!-- Underattack -->
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-AttackedbyNPC</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]

	[CheckTrueBooleans:true]
	[TrueBooleans:SettingNormal]
	
	
	[CheckIfDamagerIsNpc:true]
      </Description>
      
    </EntityComponent>	

	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-AttackedbyPlayer</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]


[CheckTrueBooleans:true]

[CheckPlayerReputation:true]
[MaxPlayerReputationDistanceCheck:4500]
[AllPlayersReputationMustMatch:true]

[CheckReputationwithFaction:{self}]
[MinPlayerReputation:-1500]
[MaxPlayerReputation:-500]


	[TrueBooleans:SettingNormal]
	[CheckIfDamagerIsPlayer:true]	
      </Description>
      
    </EntityComponent>		
	
	<!-- ============= NPC INVOLVED ============ -->
	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-DamagerIsNPC</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]

	[CheckIfDamagerIsNpc:true]
      </Description>
      
    </EntityComponent>		



	
	
	<!-- PlayerInvloded + NPC -->
	
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-PlayerHelpedNPC</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]

	[CheckCustomCounters:true]
	[CustomCounters:CountPlayerDamage]
	[CustomCountersTargets:15]
	[CounterCompareTypes:GreaterOrEqual]


      </Description>
      
    </EntityComponent>			
	
	

<!-- 
TTTTTTTTTTTarget
-->

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-HasTarget</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	
	[HasTarget:true]

      </Description>
      
    </EntityComponent>	


    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId></SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[UseFailCondition:true]
	
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[NoTarget:true]

      </Description>
      
    </EntityComponent>	





    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-TargetLight</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[HasTarget:true]

	[CheckThreatScore:true]
	[CheckThreatScoreMinimum:50]
	[CheckThreatScoreMaximum:500]
	{CheckThreatScoreIncludeOtherNpcOwners:true]	
	[CheckThreatScoreRadius:3000]
	[CheckThreatScoreFromTargetPosition:true]
	[CheckThreatScoreGridConfiguration:All]
	
      </Description>
      
    </EntityComponent>	



    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-TargetMedium</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[HasTarget:true]

	[CheckThreatScore:true]
	[CheckThreatScoreMinimum:501]
	[CheckThreatScoreMaximum:1000]
	{CheckThreatScoreIncludeOtherNpcOwners:true]	
	[CheckThreatScoreRadius:3000]
	[CheckThreatScoreFromTargetPosition:true]
	[CheckThreatScoreGridConfiguration:All]
	
      </Description>
    </EntityComponent>	

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-TargetMediumOrGreater</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[HasTarget:true]

	[CompareThreatScore:true]
	[CompareThreatScoreValue:501]
	
	[CompareThreatScoreMode:GreaterOrEqual]
	[CompareThreatScoreRadius:3000]
	[CompareThreatScoreIncludeOtherNpcOwners:true]
	[CompareThreatScoreGridConfiguration:All]
	[CompareThreatScoreFromTargetPosition:true]	
      </Description>
    </EntityComponent>	




    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-TargetHard</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[HasTarget:true]

	[CheckThreatScore:true]
	[CheckThreatScoreMinimum:1001]
	[CheckThreatScoreMaximum:1500]
	{CheckThreatScoreIncludeOtherNpcOwners:true]	
	[CheckThreatScoreRadius:3000]
	[CheckThreatScoreFromTargetPosition:true]
	[CheckThreatScoreGridConfiguration:All]
	
      </Description>
    </EntityComponent>	


    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
          <TypeId>Inventory</TypeId>
          <SubtypeId>FAC-Context-Condition-TargetVeryHard</SubtypeId>
      </Id>
      <Description>

	[RivalAI Condition]
	[UseConditions:true]
	[MatchAnyCondition:false]
	[CheckTrueBooleans:true]
	
	[HasTarget:true]

	[CheckThreatScore:true]
	[CheckThreatScoreMinimum:1501]
	[CheckThreatScoreMaximum:99999999999999]
	{CheckThreatScoreIncludeOtherNpcOwners:true]	
	[CheckThreatScoreRadius:3000]
	[CheckThreatScoreFromTargetPosition:true]
	[CheckThreatScoreGridConfiguration:All]
	
      </Description>
    </EntityComponent>	
		
	
	
  </EntityComponents>
</Definitions>