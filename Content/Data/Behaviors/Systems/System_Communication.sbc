<?xml version="1.0"?>
<Definitions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <EntityComponents>

    <!--

    Communications System (succcessor to alerts)
      * Encounters broadcast SOS when in battle (10km range).
      * Dynamic encounters can be set to respond to this by flying to the SOS sender to provide backup.

    Contents:
      * AllGood: Battle has ended / enemy has left.
      * SOS: Requesting backup.
      * Compromised: Encounter disabled.

    Usage:
      * Trigger MSB_TriggerEvent_SendSOS to force SOS outside of normal logic.
      * Define [OverrideTargetData:MSB_TargetProfile_LongRange] in behavior if you want the encounter to respond to SOS.
      * Reference MSB_System_Communication_Action_Enable_SOS_Response_Dynamic in your behavior if you want the encounter to respond to SOS.

    -->

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_TriggerGroup</SubtypeId>
      </Id>
      <Description>
        [RivalAI TriggerGroup]

        [Triggers:MSB_System_Communication_Trigger_AllGood]
        [Triggers:MSB_System_Communication_Trigger_SOS]
        [Triggers:MSB_System_Communication_Trigger_Compromised]
      </Description>
    </EntityComponent>

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_Enable_SOS_Response_Dynamic</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [EnableTriggers:true]
        [EnableTriggerNames:MSB_System_Communication_Trigger_SOS_Received_Dynamic]
      </Description>
    </EntityComponent>

    <!-- AllGood -->
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_AllGood</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [Type:Manual]
        [Tags:MSB_TriggerEvent_NoLongerInBattle]

        [MaxActions:-1]
        [Actions:MSB_System_Communication_Action_AllGood]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_AllGood</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - Sending AllGood]

        [BroadcastCommandProfiles:true]

        [CommandProfileIds:MSB_System_Communication_Command_AllGood]
        [CommandProfileIds:MSB_System_Communication_Command_AllGood_AbortResponse]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Command_AllGood</SubtypeId>
      </Id>
      <Description>
        [RivalAI Command]

        [CommandCode:{Faction}_AllGood]

        [IgnoreAntennaRequirement:true]
        [IgnoreReceiverAntennaRequirement:true]
        [MatchSenderReceiverOwners:true]
        [Radius:10000]

        [CommandDelayTicks:180]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Command_AllGood_AbortResponse</SubtypeId>
      </Id>
      <Description>
        [RivalAI Command]

        [CommandCode:{Faction}_AllGood_AbortResponse]

        [IgnoreAntennaRequirement:true]
        [IgnoreReceiverAntennaRequirement:true]
        [MatchSenderReceiverOwners:true]
        [SendDamagerEntityId:true]

        [Radius:2500]

        [CommandDelayTicks:180]
      </Description>
    </EntityComponent>

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_AllGood_Received</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [Type:CommandReceived]
        [CommandReceiveCode:{Faction}_AllGood_AbortResponse]

        [Conditions:MSB_System_Communication_Condition_AllGood_Received]

        [Actions:MSB_System_Communication_Action_AllGood_Received]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Condition_AllGood_Received</SubtypeId>
      </Id>
      <Description>
        [RivalAI Condition]

        [UseConditions:true]
        [MatchAnyCondition:false]

        [CheckTrueBooleans:true]
        [TrueBooleans:MSB_RespondingToSOS]

        [CheckFalseBooleans:true]
        [FalseBooleans:SettingBattle]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_AllGood_Received</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - Receiving AllGood]

        [DisableTriggers:true]
        [DisableTriggerNames:MSB_System_Communication_Trigger_SOS_Response_Timeout]

        [SetBooleansFalse:MSB_RespondingToSOS]

        [ManuallyActivateTrigger:true]
        [ManuallyActivatedTriggerTags:MSB_TriggerEvent_AllGood_Received]
        [ManuallyActivatedTriggerTags:MSB_Role_InitRole]
      </Description>
    </EntityComponent>

    <!-- SOS -->
    <!-- Send SOS -->
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_SOS_Direct</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [Type:Manual]
        [Tags:MSB_TriggerEvent_SendSOS]

        [MaxActions:-1]
        [Actions:MSB_System_Communication_Action_SOS]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_SOS</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [Type:Timer]

        [UseTrigger:true]
        [StartsReady:true]

        [MinCooldownMs:120000]
        [MaxCooldownMs:120001]

        [Conditions:MSB_System_Communication_Condition_SOS]

        [Actions:MSB_System_Communication_Action_SOS]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Condition_SOS</SubtypeId>
      </Id>
      <Description>
        [RivalAI Condition]

        [UseConditions:true]
        [MatchAnyCondition:false]

        [CheckTrueBooleans:true]
        [TrueBooleans:SettingBattle]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_SOS</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - Sending SOS]

        [ManuallyActivateTrigger:true]
        [ManuallyActivatedTriggerTags:MSB_TriggerEvent_SOS]

        [BroadcastCommandProfiles:true]

        [CommandProfileIds:MSB_System_Communication_Command_SOS]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Command_SOS</SubtypeId>
      </Id>
      <Description>
        [RivalAI Command]

        [CommandCode:{Faction}_SOS]

        [MatchSenderReceiverOwners:true]
        [SendTargetEntityId:true]
        [SendGridValue:true]

        [CommandDelayTicks:180]
      </Description>
    </EntityComponent>

    <!-- Receive SOS -->
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_SOS_Received_Dynamic</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [Type:CommandReceived]
        [CommandReceiveCode:{Faction}_SOS]

        [UseTrigger:false]
        [StartsReady:false]

        [Conditions:MSB_System_Communication_Condition_SOS_Received]

        [Actions:MSB_System_Communication_Action_SOS_Received_Dynamic]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Condition_SOS_Received</SubtypeId>
      </Id>
      <Description>
        [RivalAI Condition]

        [UseConditions:true]
        [MatchAnyCondition:false]

        [CheckFalseBooleans:true]
        [FalseBooleans:MSB_CombatTypeActive]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_SOS_Received_Dynamic</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - Receiving SOS Dynamic]

        [SwitchToReceivedTarget:true]

        [ManuallyActivateTrigger:true]
        [ManuallyActivatedTriggerTags:MSB_TriggerEvent_SOS_Response_Dynamic]
        [ManuallyActivatedTriggerTags:MSB_CombatType_InitCombatType]

        [SetBooleansTrue:MSB_RespondingToSOS]

        [ResetCooldownTimeOfTriggers:true]
        [ResetTriggerCooldownNames:MSB_System_Communication_Trigger_SOS_Response_Timeout]

        [EnableTriggers:true]
        [EnableTriggerNames:MSB_System_Communication_Trigger_SOS_Response_Timeout]
      </Description>
    </EntityComponent>

    <!-- TODO: Write Static response. -->

    <!-- SOS Response Timeout (10min) -->
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_SOS_Response_Timeout</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [Type:Timer]

        [UseTrigger:false]
        [StartsReady:false]

        [MinCooldownMs:600000]
        [MaxCooldownMs:600001]

        [Conditions:MSB_System_Communication_Condition_SOS_Response_Timeout]

        [Actions:MSB_System_Communication_Action_SOS_Response_Timeout]

        [UseElseActions:true]
        [ElseActions:MSB_System_Communication_Action_SOS_Response_Timeout_StillInBattle]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Condition_SOS_Response_Timeout</SubtypeId>
      </Id>
      <Description>
        [RivalAI Condition]

        [UseConditions:true]
        [MatchAnyCondition:false]

        [CheckFalseBooleans:true]
        [FalseBooleans:SettingBattle]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_SOS_Response_Timeout</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - SOS Response Timeout]

        [DisableTriggers:true]
        [DisableTriggerNames:MSB_System_Communication_Trigger_SOS_Response_Timeout]

        [SetBooleansFalse:MSB_RespondingToSOS]

        [ManuallyActivateTrigger:true]
        [ManuallyActivatedTriggerTags:MSB_TriggerEvent_SOS_ResponseTimeout]
        [ManuallyActivatedTriggerTags:MSB_Role_InitRole]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_SOS_Response_Timeout_StillInBattle</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - SOS Response Timeout StillInBattle]

        [DisableTriggers:true]
        [DisableTriggerNames:MSB_System_Communication_Trigger_SOS_Response_Timeout]

        [SetBooleansFalse:MSB_RespondingToSOS]
      </Description>
    </EntityComponent>

    <!-- Compromised -->
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_Compromised</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [UseTrigger:true]
        [Type:Compromised]

        [MaxActions:-1]
        [Actions:MSB_System_Communication_Action_Compromised]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_Compromised</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - Sending Compromised]

        [BroadcastCommandProfiles:true]

        [CommandProfileIds:MSB_System_Communication_Command_Compromised]
        [CommandProfileIds:MSB_System_Communication_Command_Compromised_AbortResponse]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Command_Compromised</SubtypeId>
      </Id>
      <Description>
        [RivalAI Command]

        [CommandCode:{Faction}_Compromised]

        [MatchSenderReceiverOwners:true]
        [SendDamagerEntityId:true]

        [CommandDelayTicks:180]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Command_Compromised_AbortResponse</SubtypeId>
      </Id>
      <Description>
        [RivalAI Command]

        [CommandCode:{Faction}_Compromised_AbortResponse]

        [IgnoreAntennaRequirement:true]
        [IgnoreReceiverAntennaRequirement:true]
        [MatchSenderReceiverOwners:true]
        [SendDamagerEntityId:true]

        [Radius:2500]

        [CommandDelayTicks:180]
      </Description>
    </EntityComponent>

    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Trigger_Compromised_Received</SubtypeId>
      </Id>
      <Description>
        [RivalAI Trigger]

        [Type:CommandReceived]
        [CommandReceiveCode:{Faction}_Compromised_AbortResponse]

        [Conditions:MSB_System_Communication_Condition_Compromised_Received]

        [Actions:MSB_System_Communication_Action_Compromised_Received]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Condition_Compromised_Received</SubtypeId>
      </Id>
      <Description>
        [RivalAI Condition]

        [UseConditions:true]
        [MatchAnyCondition:false]

        [CheckTrueBooleans:true]
        [TrueBooleans:MSB_RespondingToSOS]
      </Description>
    </EntityComponent>
    <EntityComponent xsi:type="MyObjectBuilder_InventoryComponentDefinition">
      <Id>
        <TypeId>Inventory</TypeId>
        <SubtypeId>MSB_System_Communication_Action_Compromised_Received</SubtypeId>
      </Id>
      <Description>
        [RivalAI Action]

        [DebugMessage:CommSystem - Receiving Compromised]

        [DisableTriggers:true]
        [DisableTriggerNames:MSB_System_Communication_Trigger_SOS_Response_Timeout]

        [ManuallyActivateTrigger:true]
        [ManuallyActivatedTriggerTags:MSB_TriggerEvent_Compromised_Received]

        [SetBooleansFalse:MSB_RespondingToSOS]
      </Description>
    </EntityComponent>

  </EntityComponents>
</Definitions>